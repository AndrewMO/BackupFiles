package com.active.hpsperf;

import javax.crypto.*;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
import java.util.Base64.Encoder;
import java.util.Base64.Decoder;

public class CipherCode {

	private static final String Algorithm = "DESede";
//	private static final String PASSWORD_CRYPT_KEY = "FFCCF1622FC3401498430C75";
	private static final String Vector = "AF4BD107";

	public static String encrypt(String src) {

		byte[] byEncrypted = null;
		String strEncoded = null;

		try {
			SecretKey deskey = new SecretKeySpec(build3DesKey(), Algorithm);
			Cipher c1 = Cipher.getInstance("DESede/CBC/PKCS5Padding");
			c1.init(Cipher.ENCRYPT_MODE, deskey, buildIV(Vector));
			byEncrypted = c1.doFinal(src.getBytes());
		} catch (java.security.NoSuchAlgorithmException e1) {
			e1.printStackTrace();
		} catch (javax.crypto.NoSuchPaddingException e2) {
			e2.printStackTrace();
		} catch (java.lang.Exception e3) {
			e3.printStackTrace();
		}

		if (byEncrypted != null) {
			Encoder ecoder = Base64.getEncoder();
			strEncoded = new String(ecoder.encode(byEncrypted));
		}

		return strEncoded;
	}

	public static String decrypt(String src) {
		// Decode Base64 String
		Decoder decoder = Base64.getDecoder();
		byte[] bySrcDecdoded = decoder.decode(src.getBytes());
		
		String strDecoded = null;

		try {
			SecretKey deskey = new SecretKeySpec(build3DesKey(), Algorithm);
			Cipher c1 = Cipher.getInstance("DESede/CBC/PKCS5Padding");
			c1.init(Cipher.DECRYPT_MODE, deskey, buildIV(Vector));
			strDecoded = new String(c1.doFinal(bySrcDecdoded));

		} catch (java.security.NoSuchAlgorithmException e1) {
			e1.printStackTrace();
		} catch (javax.crypto.NoSuchPaddingException e2) {
			e2.printStackTrace();
		} catch (java.lang.Exception e3) {
			e3.printStackTrace();
		}
		return strDecoded;
	}

	private static byte[] build3DesKey() {
		/*
		 * For HPS 3des decryption, I think Java cannot decrypt the cipher text
		 * generated by HPS directly, for HPS use one special .NET class. so
		 * setup a VB.NET to run the VB code, then ¡®hacking¡¯ the intermediate
		 * value and put in Java
		 */
		byte[] bykey = { (byte) 128, (byte) 247, (byte) 62, (byte) 137,
				(byte) 84, (byte) 196, (byte) 218, (byte) 241, (byte) 247,
				(byte) 32, (byte) 239, (byte) 244, (byte) 7, (byte) 137,
				(byte) 25, (byte) 14, (byte) 199, (byte) 4, (byte) 218,
				(byte) 253, (byte) 82, (byte) 227, (byte) 115, (byte) 233 };

		return bykey;
	}

	private static IvParameterSpec buildIV(String sIV) {
		byte[] byIV = new byte[8]; // Declare 8 bit blank array
		byte[] temp = sIV.getBytes();

		if (byIV.length > temp.length) {
			System.arraycopy(temp, 0, byIV, 0, temp.length);
		} else {
			System.arraycopy(temp, 0, byIV, 0, byIV.length);
		}
		return new IvParameterSpec(byIV);
	}
	
}
